{
  "name": "copilot-chat-analyzer",
  "private": false,
  "version": "0.0.2",
  "description": "TypeScript library for analyzing and monitoring GitHub Copilot chat exports with status detection, request counting, and MCP tool tracking",
  "keywords": [
    "copilot",
    "chat",
    "analyzer",
    "github",
    "typescript",
    "mcp",
    "model-context-protocol",
    "monitoring",
    "status-detection",
    "dialog-analysis",
    "ai-tools",
    "export-analysis"
  ],
  "author": "dealenx",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/dealenx/copilot-chat-analyzer.git"
  },
  "bugs": {
    "url": "https://github.com/dealenx/copilot-chat-analyzer/issues"
  },
  "homepage": "https://github.com/dealenx/copilot-chat-analyzer#readme",
  "funding": {
    "type": "github",
    "url": "https://github.com/sponsors/dealenx"
  },
  "engines": {
    "node": ">=16.0.0"
  },
  "ai-usage": {
    "purpose": "Analyze GitHub Copilot chat exports for dialog status, request counting, and MCP tool monitoring",
    "quick-start": "import CopilotChatAnalyzer, { DialogStatus } from 'copilot-chat-analyzer'; const analyzer = new CopilotChatAnalyzer(); const status = analyzer.getDialogStatus(chatData);",
    "main-features": [
      "Dialog status detection (pending, in_progress, completed, canceled)",
      "Request counting and analysis",
      "MCP (Model Context Protocol) tool monitoring",
      "Chat export validation and parsing"
    ],
    "common-methods": {
      "getDialogStatus": "Returns dialog status: 'pending' | 'completed' | 'canceled' | 'in_progress'",
      "getRequestsCount": "Returns number of requests in chat",
      "getDialogStatusDetails": "Returns detailed status information with flags",
      "getMcpToolMonitoring": "Returns MCP tool usage statistics and monitoring data"
    },
    "status-meanings": {
      "pending": "Chat created but no requests made yet (requests: [])",
      "in_progress": "Chat has requests but not completed",
      "completed": "Chat finished successfully (has followups: [])",
      "canceled": "Chat was canceled (isCanceled: true)"
    }
  },
  "type": "module",
  "main": "dist/index.cjs",
  "module": "dist/index.mjs",
  "types": "dist/index.d.ts",
  "exports": {
    ".": {
      "types": "./dist/index.d.ts",
      "import": "./dist/index.mjs",
      "require": "./dist/index.cjs",
      "default": "./dist/index.mjs"
    }
  },
  "files": [
    "dist",
    "README.md",
    "AI_USAGE.md",
    "LICENSE"
  ],
  "scripts": {
    "build": "tsup",
    "prepare": "npm run build",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage"
  },
  "devDependencies": {
    "@types/jest": "^30.0.0",
    "@types/node": "^24.6.1",
    "jest": "^30.2.0",
    "ts-jest": "^29.4.4",
    "typescript": "~5.8.3",
    "vite": "^7.1.7"
  },
  "dependencies": {
    "tsup": "^8.5.0"
  }
}
